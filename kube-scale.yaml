apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .DEPLOYMENT_NAME }}-scaler

---

kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ .DEPLOYMENT_NAME }}.scale
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "false"
rules:
  - apiGroups: ["extensions", "apps"]
    resources:
      - deployments/scale
    resourceNames:
      - {{ .DEPLOYMENT_NAME }}
    verbs:
      - patch

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ .DEPLOYMENT_NAME }}-scaler.{{ .DEPLOYMENT_NAME }}.scale
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ .DEPLOYMENT_NAME }}.scale
subjects:
- kind: ServiceAccount
  name: {{ .DEPLOYMENT_NAME }}-scaler

---

apiVersion: batch/v2alpha1
kind: CronJob
metadata:
  name: {{ .DEPLOYMENT_NAME }}-autoscale
  labels:
    app: {{ .DEPLOYMENT_NAME }}-autoscale
    role: cron
spec:
  schedule: {{ quote .CRON }}
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: {{ .DEPLOYMENT_NAME }}-scaler
          containers:
            - name: {{ .DEPLOYMENT_NAME }}-autoscale
              image: {{ .IMAGE_NAME }}:{{ .IMAGE_TAG }}
              imagePullPolicy: IfNotPresent
              args: ["{{ .DEPLOYMENT_NAME }}", "{{ .REPLICAS }}"]
          restartPolicy: OnFailure
          {{ if isset "IMAGE_PULL_SECRET" }}
          imagePullSecrets:
            - name: {{ .IMAGE_PULL_SECRET}}
          {{ end }}